<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on Kiran Chavala Tech Notes</title>
    <link>https://kiranchavala.in/tags/docker/</link>
    <description>Recent content in Docker on Kiran Chavala Tech Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 18 Sep 2021 18:11:27 +0530</lastBuildDate><atom:link href="https://kiranchavala.in/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kind</title>
      <link>https://kiranchavala.in/blog/kind/</link>
      <pubDate>Sat, 18 Sep 2021 18:11:27 +0530</pubDate>
      
      <guid>https://kiranchavala.in/blog/kind/</guid>
      <description>In order to quicly bring up a new kubernetes cluster in your local laptop, then you can use kind.
Kind ( Kubernetes in Docker)
Kind basically creates the nodes as a containers and create a kubernetes cluster
https://kind.sigs.k8s.io/
https://github.com/kubernetes-sigs/kind
brew install kind Deploying a Single node cluster kind create cluster docker images kindest/node &amp;lt;none&amp;gt; d372b674475a 3 months ago 1.1GB docker ps -a 3047fe4988f4 kindest/node:v1.21.1 &amp;#34;/usr/local/bin/entrâ€¦&amp;#34; 8 days ago Up 8 days 127.</description>
    </item>
    
    <item>
      <title>Using crictl and nerdctl</title>
      <link>https://kiranchavala.in/blog/using-crictl-and-nerdctl/</link>
      <pubDate>Mon, 23 Aug 2021 13:27:25 +0530</pubDate>
      
      <guid>https://kiranchavala.in/blog/using-crictl-and-nerdctl/</guid>
      <description>With the removal docker as the default container runtime in kubernetes.
When a situation arises where you need to debug the container application container
You can use Crictl and Nerdctl and debug the issue quickly
Crictl
Install crictl VERSION=&amp;#34;v1.22.0&amp;#34; wget https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-$VERSION-linux-amd64.tar.gz sudo tar zxvf crictl-$VERSION-linux-amd64.tar.gz -C /usr/local/bin Create a endpoint configuration file (crictl.yaml) Example
To interact with containerd runtime env cat /etc/crictl.yaml runtime-endpoint: unix:///run/containerd/containerd.sock image-endpoint: unix:///run/containerd/containerd.sock timeout: 2 debug: false pull-image-on-create: false To interact with docker runtime cat /etc/crictl.</description>
    </item>
    
  </channel>
</rss>
