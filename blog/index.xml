<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Kiran Chavala Tech Notes</title>
    <link>https://kiranchavala.in/blog/</link>
    <description>Recent content in Blog on Kiran Chavala Tech Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 01 May 2023 13:39:22 +0530</lastBuildDate><atom:link href="https://kiranchavala.in/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building Cloudstack on Ubuntu 22.04</title>
      <link>https://kiranchavala.in/blog/building-cloudstack-on-ubuntu-22.04/</link>
      <pubDate>Mon, 01 May 2023 13:39:22 +0530</pubDate>
      
      <guid>https://kiranchavala.in/blog/building-cloudstack-on-ubuntu-22.04/</guid>
      <description>Building cloudstack on Ubuntu 22.0.4
Apache CloudStack is open source software designed to deploy and manage large networks of virtual machines, as a highly available, highly scalable Infrastructure as a Service (IaaS) cloud computing platform. CloudStack is used by a number of service providers to offer public cloud services, and by many companies to provide an on-premises (private) cloud offering, or as part of a hybrid cloud solution.
https://cloudstack.apache.org/ http://docs.cloudstack.apache.org/en/latest/</description>
    </item>
    
    <item>
      <title>Building Cloudstack on Mac Os</title>
      <link>https://kiranchavala.in/blog/building-cloudstack-on-mac-os/</link>
      <pubDate>Mon, 01 May 2023 11:50:51 +0530</pubDate>
      
      <guid>https://kiranchavala.in/blog/building-cloudstack-on-mac-os/</guid>
      <description>Building cloudstack on Mac os
Apache CloudStack is open source software designed to deploy and manage large networks of virtual machines, as a highly available, highly scalable Infrastructure as a Service (IaaS) cloud computing platform. CloudStack is used by a number of service providers to offer public cloud services, and by many companies to provide an on-premises (private) cloud offering, or as part of a hybrid cloud solution.
https://cloudstack.apache.org/ http://docs.cloudstack.apache.org/en/latest/</description>
    </item>
    
    <item>
      <title>Using Cloudinit in Cloudstack</title>
      <link>https://kiranchavala.in/blog/using-cloud-init-in-cloudstack/</link>
      <pubDate>Thu, 10 Nov 2022 11:48:50 +0530</pubDate>
      
      <guid>https://kiranchavala.in/blog/using-cloud-init-in-cloudstack/</guid>
      <description>Launch any linux vm (Centos, Ubuntu etc) from a iso
Install the cloud init package
RHEL: yum install cloud-init
Ubuntu : apt-get install cloud-init
Configure the cloud init by adding the cloudstack datasource package vi /etc/cloud/cloud.cfg.d/99_cloudstack.cfg
datasource_list: [ CloudStack, None ]
Create a template of the disk
Launch a vm based on the template created and pass the userdata parameter
deploy virtualmachine serviceofferingid=720d1320-06d7-4918-9f2a-ef5ba7e07bf3 templateid=0d9bf1f4-288d-4510-b2c5-8e980c51c98d zoneid=10a26e0d-2085-4b09-bd0f-c726a6bd9443 networkids=cf8fcdb8-741c-4f98-b856-adc4fd99c157 userdata=I2Nsb3VkLWNvbmZpZwpydW5jbWQ6CiAgLSBta2RpciAvcnVuL2tpcmFuCiAgLSBlY2hvIGtpcmFuIHNheXMgaGkgPj4gL3J1bi9raXJhbi9zYW1wbGUudHh0CiAgLSBbIHNoLCAteGMsICAvcm9vdC9zdXJlZWRnZV9zZXJ2ZXJfdXRpbGl0eV9pbnN0YWxsZXIuc2ggLS10b2tlbiAxNDY2Q0IxNTc3NzdCQjcyIF0=
Note: Make sure the userdata is encoded in base64 format if calling from Api , if you are passing the userdata from UI , there is no need to encode it</description>
    </item>
    
    <item>
      <title>Using Packer to deploy a image on Google Cloud</title>
      <link>https://kiranchavala.in/blog/using-packer-to-deploy-a-image-on-google-cloud/</link>
      <pubDate>Wed, 01 Dec 2021 15:05:48 +0530</pubDate>
      
      <guid>https://kiranchavala.in/blog/using-packer-to-deploy-a-image-on-google-cloud/</guid>
      <description>Packer is an open source tool that enables you to create identical machine images for multiple platforms from a single source template. A common use case is creating &amp;ldquo;golden images&amp;rdquo; that teams across an organization can use in cloud infrastructure.
There 2 ways to write the packer code to build the image
Using JSON formatted code Using HCL2 formatted code In order to interact with Google cloud we have to create a service account in GCP</description>
    </item>
    
    <item>
      <title>Creating Kubernetes Cluster via Vagrant</title>
      <link>https://kiranchavala.in/blog/creating-kubernetes-cluster-via-vagrant/</link>
      <pubDate>Mon, 27 Sep 2021 12:31:52 +0530</pubDate>
      
      <guid>https://kiranchavala.in/blog/creating-kubernetes-cluster-via-vagrant/</guid>
      <description>Install virtual box sudo apt install virtualbox
Install vagrant curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
sudo apt-add-repository &amp;ldquo;deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main&amp;rdquo;
sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install vagrant
Git clone this repository git clone https://github.com/justmeandopensource/kubernetes
cd vagrant-provisioning
vagrant up
This is going to create 1 master node with 2 worker nodes</description>
    </item>
    
    <item>
      <title>Import Existing Resources into Terrafrorm</title>
      <link>https://kiranchavala.in/blog/import-existing-resources-into-terrafrorm/</link>
      <pubDate>Wed, 22 Sep 2021 12:14:02 +0530</pubDate>
      
      <guid>https://kiranchavala.in/blog/import-existing-resources-into-terrafrorm/</guid>
      <description>There could be scenarios where you want to import the already existing resources from cloud providers into terraform.
Terraform has an import modude which does this job and using the module is a tedious process
https://www.terraform.io/docs/cli/import/index.html
There is tool called Terraformer which does the job of reverese terraforming
https://github.com/GoogleCloudPlatform/terraformer
Google cloud https://gist.github.com/kiranchavala/54a930c8da148cc2b637c053dc1ba8ba
AWS https://gist.github.com/kiranchavala/c2a01a7a43ea15cb8921a710d6cf22ea
Azure https://gist.github.com/kiranchavala/18a1c555c198eb0944cbad3791602dc7
Openstack https://gist.github.com/kiranchavala/c63243b0b76adcdafc7d06d87a304370
Cloudstack https://gist.github.com/kiranchavala/c1b81f1d629b0567e08e219891d4ed48</description>
    </item>
    
    <item>
      <title>Kind</title>
      <link>https://kiranchavala.in/blog/kind/</link>
      <pubDate>Sat, 18 Sep 2021 18:11:27 +0530</pubDate>
      
      <guid>https://kiranchavala.in/blog/kind/</guid>
      <description>In order to quicly bring up a new kubernetes cluster in your local laptop, then you can use kind.
Kind ( Kubernetes in Docker)
Kind basically creates the nodes as a containers and create a kubernetes cluster
https://kind.sigs.k8s.io/
https://github.com/kubernetes-sigs/kind
brew install kind Deploying a Single node cluster kind create cluster docker images kindest/node &amp;lt;none&amp;gt; d372b674475a 3 months ago 1.1GB docker ps -a 3047fe4988f4 kindest/node:v1.21.1 &amp;#34;/usr/local/bin/entr…&amp;#34; 8 days ago Up 8 days 127.</description>
    </item>
    
    <item>
      <title>Using crictl and nerdctl</title>
      <link>https://kiranchavala.in/blog/using-crictl-and-nerdctl/</link>
      <pubDate>Mon, 23 Aug 2021 13:27:25 +0530</pubDate>
      
      <guid>https://kiranchavala.in/blog/using-crictl-and-nerdctl/</guid>
      <description>With the removal docker as the default container runtime in kubernetes.
When a situation arises where you need to debug the container application container
You can use Crictl and Nerdctl and debug the issue quickly
Crictl
Install crictl VERSION=&amp;#34;v1.22.0&amp;#34; wget https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-$VERSION-linux-amd64.tar.gz sudo tar zxvf crictl-$VERSION-linux-amd64.tar.gz -C /usr/local/bin Create a endpoint configuration file (crictl.yaml) Example
To interact with containerd runtime env cat /etc/crictl.yaml runtime-endpoint: unix:///run/containerd/containerd.sock image-endpoint: unix:///run/containerd/containerd.sock timeout: 2 debug: false pull-image-on-create: false To interact with docker runtime cat /etc/crictl.</description>
    </item>
    
    <item>
      <title>Accessing xencenter via browser</title>
      <link>https://kiranchavala.in/blog/accessing-xencenter-via-browser/</link>
      <pubDate>Sat, 10 Jul 2021 10:33:47 +0530</pubDate>
      
      <guid>https://kiranchavala.in/blog/accessing-xencenter-via-browser/</guid>
      <description>Currently to access and manage xenserver cluster you need a xencenter installed in a windows system.
This could be a limitation for the users of linux and mac
Meanwhile you can access vmware exsi servers and also manage the clusters of vcenter via http
To overcome this limitation you can use the XCP hypervisor
XCP is open source hypervisor based on XenServer.
Download the XCP-ng https://xcp-ng.org/#easy-to-install
https://xcp-ng.org/docs/install.html#iso-installation
Install the xcp-center for windows systems to access the XCP hypervisors https://github.</description>
    </item>
    
    <item>
      <title>Logstash Cloudstack</title>
      <link>https://kiranchavala.in/blog/logstash-cloudstack/</link>
      <pubDate>Sun, 13 Jun 2021 13:35:59 +0530</pubDate>
      
      <guid>https://kiranchavala.in/blog/logstash-cloudstack/</guid>
      <description>Using Elastic search is a great tool to analysze logs generated by your application
Elastic search is made up of 3 parts
Elastic search &amp;ndash;&amp;gt; the core search engine Logstah &amp;ndash;&amp;gt; to parse the logs Kibana &amp;ndash;&amp;gt; visualization Here i have imported the cloudstack management server logs to the ELK and I can perform various analytics
Follow the below link to set up your elk infrstructure https://www.digitalocean.com/community/tutorials/how-to-install-elasticsearch-logstash-and-kibana-elastic-stack-on-ubuntu-18-04
Once done make sure your elastic, logstash, and kibana process are able to communicate with each other</description>
    </item>
    
    <item>
      <title>Terraformcloudstack</title>
      <link>https://kiranchavala.in/blog/terraform-cloudstack/</link>
      <pubDate>Mon, 31 May 2021 21:38:24 +0530</pubDate>
      
      <guid>https://kiranchavala.in/blog/terraform-cloudstack/</guid>
      <description>Terraform is a tool to deploy resources on cloud
It is an infrastructure as code tool
Generally the plugins are available at
https://registry.terraform.io/
To use the plugins which are archived and not available in the terraform registry
Follow the steps a small tweak is necessary
Currently the cloudstack plugin is archived https://github.com/hashicorp/terraform-provider-cloudstack
https://github.com/hashicorp/terraform-provider-cloudstack/blob/stable-website/website/docs/index.html.markdown
Download the terrform provider for cloudstack based on the os you are running https://releases.hashicorp.com/terraform-provider-cloudstack/0.3.0/
On linux and mac Move it</description>
    </item>
    
    <item>
      <title>Raspberry pi</title>
      <link>https://kiranchavala.in/blog/raspberrypi/</link>
      <pubDate>Thu, 03 Dec 2020 13:22:32 +0530</pubDate>
      
      <guid>https://kiranchavala.in/blog/raspberrypi/</guid>
      <description>After hearing frequent mentions of Raspberry pi use cases, I had decided to buy Raspberry pi 4 model.
The site https://www.thingbits.in was giving best discounts on pi and it&amp;rsquo;s accessories.
The best use case of pi was the implementation of PI-HOLE which blocks all the ads on websites.
Here are links i used for the complete installation of pi and implementation of PI-HOLE
https://docs.pi-hole.net/
https://medium.com/swlh/how-to-set-up-pi-hole-2293246dc8ed
https://filterlists.com/lists/pl-host-file</description>
    </item>
    
    <item>
      <title>Downloading songs from Spotify</title>
      <link>https://kiranchavala.in/blog/downloading-songs-from-spotify/</link>
      <pubDate>Thu, 15 Oct 2020 13:06:51 +0530</pubDate>
      
      <guid>https://kiranchavala.in/blog/downloading-songs-from-spotify/</guid>
      <description>To download the songs from spotify
https://gist.github.com/kiranchavala/36afff2694c620421e26dd8c85cd74a4
References
https://github.com/SathyaBhat/spotify-dl
https://sathyasays.com/2015/12/29/spotify-dl-download-your-spotify-my-music-songs-as-mp3/
https://medium.com/@sachithmuhandiram/youtube-dl-cheatsheet-bcc0782e7124</description>
    </item>
    
    <item>
      <title>K9scli</title>
      <link>https://kiranchavala.in/blog/k9scli/</link>
      <pubDate>Wed, 26 Aug 2020 15:04:37 +0530</pubDate>
      
      <guid>https://kiranchavala.in/blog/k9scli/</guid>
      <description>k9s is an excellent cli tool to interact with the kubernetes clusters
brew install derailed/k9s/k9s
Ref: https://k9scli.io/topics/install/ https://k9scli.io/</description>
    </item>
    
    <item>
      <title>Installing k3s</title>
      <link>https://kiranchavala.in/blog/installing-k3s/</link>
      <pubDate>Wed, 26 Aug 2020 13:52:35 +0530</pubDate>
      
      <guid>https://kiranchavala.in/blog/installing-k3s/</guid>
      <description>K3s is light weight kubernetes distribution from Rancher
https://gist.github.com/kiranchavala/71835ec52a2c5020a5e439345b57d744
Ref: https://k3s.io/ https://github.com/alexellis/k3sup</description>
    </item>
    
    <item>
      <title>Mergingkubeconfig</title>
      <link>https://kiranchavala.in/blog/merging-kube-config-files/</link>
      <pubDate>Tue, 25 Aug 2020 21:20:00 +0530</pubDate>
      
      <guid>https://kiranchavala.in/blog/merging-kube-config-files/</guid>
      <description>Merging kubeconfig files
When you have multiple kubernetes clusters, manually entering to the kubectl config is time consuming and error prone
Add the two config files to the env var export KUBECONFIG=~/.kube/config:~/Desktop/configFile2.yaml
Review that you have two configurations in one view
kubectl config view
View the raw config and output to a new file
kubectl config view &amp;ndash;raw &amp;gt; test.yaml
cp test.yaml .kube/config
env
you can unset the KUBECONFIG later on</description>
    </item>
    
    <item>
      <title>Enabling zsh history</title>
      <link>https://kiranchavala.in/blog/enabling-zsh-history/</link>
      <pubDate>Tue, 25 Aug 2020 17:15:07 +0530</pubDate>
      
      <guid>https://kiranchavala.in/blog/enabling-zsh-history/</guid>
      <description>Add alias in your .zshrc file
alias history=&amp;ldquo;history 0&amp;rdquo;
source ~/.zshrc</description>
    </item>
    
    <item>
      <title>Using Hugo</title>
      <link>https://kiranchavala.in/blog/using-hugo/</link>
      <pubDate>Tue, 25 Aug 2020 16:26:27 +0530</pubDate>
      
      <guid>https://kiranchavala.in/blog/using-hugo/</guid>
      <description>Hugo Requires Go
brew install hugo
create a folder for your website files
hugo server up #It will generate a site locally on port 1313
Install a theme and copy exampleSite/config.toml to the root folder
mkdir themes // Creates a &amp;ldquo;themes&amp;rdquo; Folder cd themes // Points to the &amp;ldquo;themes&amp;rdquo; Folder git submodule add https://github.com/pacollins/hugo-future-imperfect-slim.git
Youtube references
Mike Dane&amp;rsquo;s Playlist
Ref
Installation
https://gohugo.io/getting-started/installing/
Theme https://github.com/pacollins/hugo-future-imperfect-slim#examplesite</description>
    </item>
    
    <item>
      <title>Installing Rancher</title>
      <link>https://kiranchavala.in/blog/installing-rancher/</link>
      <pubDate>Tue, 25 Aug 2020 16:20:28 +0530</pubDate>
      
      <guid>https://kiranchavala.in/blog/installing-rancher/</guid>
      <description>Rancher is a tool to manage your kubernetes cluster
The installation steps are here
https://gist.github.com/kiranchavala/893ec350dd55f9fb4747b602208bb4fc</description>
    </item>
    
    <item>
      <title>Installing kubernetes via kubeadm</title>
      <link>https://kiranchavala.in/blog/installing-kubernetes-via-kubeadm/</link>
      <pubDate>Wed, 19 Aug 2020 17:10:09 +0530</pubDate>
      
      <guid>https://kiranchavala.in/blog/installing-kubernetes-via-kubeadm/</guid>
      <description>The steps are here
https://gist.github.com/kiranchavala/7e4cda9bff5e141bd7601c870191e051</description>
    </item>
    
    <item>
      <title>Using Jekyll</title>
      <link>https://kiranchavala.in/blog/using-jekyll/</link>
      <pubDate>Fri, 14 Aug 2020 12:43:02 +0530</pubDate>
      
      <guid>https://kiranchavala.in/blog/using-jekyll/</guid>
      <description>Jekyll is popular static site generator
The steps are here
https://gist.github.com/kiranchavala/152291d148c3694b37d691ca1df1fe8d
Youtube references
Mike Dane&amp;rsquo;s Playlist
Bill Raymond</description>
    </item>
    
    <item>
      <title>Using tmux</title>
      <link>https://kiranchavala.in/blog/using-tmux/</link>
      <pubDate>Fri, 14 Aug 2020 12:35:09 +0530</pubDate>
      
      <guid>https://kiranchavala.in/blog/using-tmux/</guid>
      <description>If you want to execute the same command across different server
https://github.com/tmux/tmux/wiki</description>
    </item>
    
    <item>
      <title>Disable ipv6 in centos 7</title>
      <link>https://kiranchavala.in/blog/disable-ipv6-in-centos-7/</link>
      <pubDate>Thu, 13 Aug 2020 22:55:43 +0530</pubDate>
      
      <guid>https://kiranchavala.in/blog/disable-ipv6-in-centos-7/</guid>
      <description>To verify if IPv6 is enabled or not, execute
ifconfig -a | grep inet6
inet6 fe80::211:aff:fe6a:9de4 prefixlen 64 scopeid 0x20
inet6 ::1 prefixlen 128 scopeid 0x10[host]
Disable Ipv6 in kernel module (requires reboot)
Edit /etc/default/grub
add ipv6.disable=1 in line GRUB_CMDLINE_LINUX, e.g
cat /etc/default/grub GRUB_TIMEOUT=5 GRUB_DEFAULT=saved GRUB_DISABLE_SUBMENU=true GRUB_TERMINAL_OUTPUT=&amp;quot;console&amp;quot; GRUB_CMDLINE_LINUX=&amp;quot;ipv6.disable=1 crashkernel=auto rhgb quiet&amp;quot; GRUB_DISABLE_RECOVERY=&amp;quot;true&amp;quot; Regenerate a GRUB configuration file and overwrite existing one
grub2-mkconfig -o /boot/grub2/grub.cfg
Restart system and verify no line “inet6” in “ip addr show” command output</description>
    </item>
    
  </channel>
</rss>
