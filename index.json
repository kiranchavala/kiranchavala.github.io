[{
    "title": "Kind",
    "date": "",
    "description": "",
    "body": "In order to quicly bring up a new kubernetes cluster in your local laptop, then you can use kind.\nKind ( Kubernetes in Docker)\nKind basically creates the nodes as a containers and create a kubernetes cluster\nhttps://kind.sigs.k8s.io/\nhttps://github.com/kubernetes-sigs/kind\nbrew install kind Deploying a Single node cluster kind create cluster docker images kindest/node \u0026lt;none\u0026gt; d372b674475a 3 months ago 1.1GB docker ps -a 3047fe4988f4 kindest/node:v1.21.1 \u0026quot;/usr/local/bin/entr…\u0026quot; 8 days ago Up 8 days 127.0.0.1:50941-\u0026gt;6443/tcp kind-control-plane docker exec -it kind-control-plane sh # crictl ps -a CONTAINER IMAGE CREATED STATE NAME ATTEMPT POD ID be7d88399e276 1a1f05a2cd7c2 8 days ago Running coredns 0 bb3eb2d8b0138 dc91af853f8d4 1a1f05a2cd7c2 8 days ago Running coredns 0 72e459f147b24 2bcbac91131f1 2b703ea309660 8 days ago Running local-path-provisioner 0 1b9b5b3329128 3787410dc6121 f37b7c809e5dc 8 days ago Running kindnet-cni 0 66b72ef1c9758 af1073c036c7b 4bbef4ca108cd 8 days ago Running kube-proxy 0 e254cfacdfb75 b29d7fa01b9ea 05b738aa1bc63 8 days ago Running etcd 0 4109caeae008c cb638fbd4988d 18e61c783b417 8 days ago Running kube-apiserver 0 f87bb12d4816e 181e0b63e3db1 0c6dccae49de8 8 days ago Running kube-controller-manager 0 0d00a01acb283 ccd3b21c436ec 8c783dd252088 8 days ago Running kube-scheduler 0 72a8570b0c0b2 kubectl get cluster-info\nkubectl get nodes -o wide NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME kind-control-plane Ready control-plane,master 8d v1.21.1 172.18.0.2 \u0026lt;none\u0026gt; Ubuntu 21.04 5.10.25-linuxkit containerd://1.5.2 Creating a Cluster with a specific name kind create cluster \u0026ndash;name mycluster\n7a70b8d28e8a kindest/node:v1.21.1 \u0026quot;/usr/local/bin/entr…\u0026quot; 3 minutes ago Up 3 minutes 127.0.0.1:54053-\u0026gt;6443/tcp mycluster-control-plane 3047fe4988f4 kindest/node:v1.21.1 \u0026quot;/usr/local/bin/entr…\u0026quot; 8 days ago Up 8 days 127.0.0.1:50941-\u0026gt;6443/tcp kind-control-plane Listing the clusters kind get clusters kind mycluster\nDeleting a kind cluster kind delete cluster  Deleting cluster \u0026quot;kind\u0026quot; kind delete cluster --name mycluster Deleting cluster \u0026quot;mycluster\u0026quot; Deploying multi master/worker nide kubernetes cluster https://kind.sigs.k8s.io/docs/user/quick-start/#configuring-your-kind-cluster\nkind create cluster --config /tmp/kind.yaml  vi /tmp/kind.yaml kind: Cluster apiVersion: kind.x-k8s.io/v1alpha4 nodes: - role: control-plane - role: control-plane - role: control-plane - role: worker - role: worker - role: worker image: kindest/node:v1.21.1@sha256:69860bda5563ac81e3c0057d654b5253219618a22ec3a346306239bba8cfa1a6 --config /tmp/kind.yaml With specific version of kubernetes https://github.com/kubernetes-sigs/kind/releases\n kind create cluster --image kindest/node:v1.21.1@sha256:69860bda5563ac81e3c0057d654b5253219618a22ec3a346306239bba8cfa1a6 --config /tmp/kind.yaml Installing Metallb loadbalancer on kind https://kind.sigs.k8s.io/docs/user/loadbalancer/\n kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/master/manifests/namespace.yaml kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey=\u0026quot;$(openssl rand -base64 128)\u0026quot; kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey=\u0026quot;$(openssl rand -base64 128)\u0026quot; https://www.youtube.com/watch?v=kkW7LNCsK74\n  ",
    "ref": "/blog/kind/"
  },{
    "title": "Using crictl and nerdctl",
    "date": "",
    "description": "",
    "body": "With the removal docker as the default container runtime in kubernetes.\nWhen a situation arises where you need to debug the container application container\nYou can use Crictl and Nerdctl and debug the issue quickly\nCrictl\n Install crictl  VERSION=\u0026quot;v1.22.0\u0026quot; wget https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-$VERSION-linux-amd64.tar.gz sudo tar zxvf crictl-$VERSION-linux-amd64.tar.gz -C /usr/local/bin Create a endpoint configuration file (crictl.yaml)  Example\nTo interact with containerd runtime env cat /etc/crictl.yaml runtime-endpoint: unix:///run/containerd/containerd.sock image-endpoint: unix:///run/containerd/containerd.sock timeout: 2 debug: false pull-image-on-create: false To interact with docker runtime cat /etc/crictl.yaml runtime-endpoint: unix:///var/run/dockershim.sock image-endpoint: unix:///var/run/dockershim.sock timeout: 2 debug: false pull-image-on-create: false To interact with Crio runtime cat /etc/crictl.yaml runtime-endpoint: unix:///run/crio/crio.sock image-endpoint: unix:///run/crio/crio.sock timeout: 2 debug: false Execute the crictl commands  Example:\nkiran@master1:~$ sudo crictl --help kiran@master1:~$ sudo crictl info kiran@master1:~$ sudo crictl info kiran@master1:~$ sudo crictl inspect \u0026lt;\u0026gt; kiran@master1:~$ sudo crictl pods Nerdctl\nWhile critctl is great its not compatible with Docker CLI, not friendly to users, and does not support non-CRI features\nCurrently nerdctl runs with containerd runtime\nhttps://github.com/containerd/nerdctl\n Installing  wget https://github.com/containerd/nerdctl/releases/download/v0.11.1/nerdctl-0.11.1-linux-amd64.tar.gz sudo tar Cxzvvf /usr/local/bin nerdctl-0.11.1-linux-amd64.tar.gz Commands  sudo nerdctl version sudo nerdctl system info sudo nerdctl help nerdctl --namespace k8s.io ps -a nerdctl run -d --name nginx -p 8080:80 nginx:alpine nerdclt ps nerdctl logs -f \u0026lt;\u0026gt; nerdctl compose up -d nerdctl top \u0026lt;\u0026gt; nerdctl volume ls nerdctl volume inspect nerdctl network -h nerdctl port \u0026lt;\u0026gt; Ref: https://github.com/kubernetes-sigs/cri-tools/blob/master/docs/crictl.md https://kubernetes.io/docs/tasks/debug-application-cluster/crictl/\nhttps://github.com/containerd/nerdctl\nhttps://github.com/containerd/nerdctl/releases\nA good video which talks about it\n  ",
    "ref": "/blog/using-crictl-and-nerdctl/"
  },{
    "title": "Accessing xencenter via browser",
    "date": "",
    "description": "",
    "body": "Currently to access and manage xenserver cluster you need a xencenter installed in a windows system.\nThis could be a limitation for the users of linux and mac\nMeanwhile you can access vmware exsi servers and also manage the clusters of vcenter via http\nTo overcome this limitation you can use the XCP hypervisor\nXCP is open source hypervisor based on XenServer.\n Download the XCP-ng  https://xcp-ng.org/#easy-to-install\nhttps://xcp-ng.org/docs/install.html#iso-installation\nInstall the xcp-center for windows systems to access the XCP hypervisors  https://github.com/xcp-ng/xenadmin/releases/\nTo manage the xenservers from Web-UI you need download the xen orchestra  login and create an account to download the xva file (xenserver based virtual appliance)\nhttps://xen-orchestra.com/#!/xo-home\nhttps://xen-orchestra.com/docs/xoa.html#alternative-install\nOnce XVA file you can import it xencenter as a appliance\nFor web login\nhttps:// xva appliance ip\nDefault user is admin@admin.net with admin as a password.\nIf you want to connect to the appliance via SSH or console, the default credentials are: • user: xoa • password: xoa\nhttps://xen-orchestra.com/docs/xoa.html#alternative-install\nTo set a password for the appliance\nhttps://xen-orchestra.com/docs/troubleshooting.html#set-or-recover-xoa-vm-password\nNow all this is fine but you still need a xcp-center and windows system to access it via http\nConvert the XVA image into OVA image. https://gist.github.com/kiranchavala/a289d26017f6f7526664b70a27e85440\n ",
    "ref": "/blog/accessing-xencenter-via-browser/"
  },{
    "title": "Logstash Cloudstack",
    "date": "",
    "description": "",
    "body": "Using Elastic search is a great tool to analysze logs generated by your application\nElastic search is made up of 3 parts\n Elastic search \u0026ndash;\u0026gt; the core search engine Logstah \u0026ndash;\u0026gt; to parse the logs Kibana \u0026ndash;\u0026gt; visualization  Here i have imported the cloudstack management server logs to the ELK and I can perform various analytics\n Follow the below link to set up your elk infrstructure  https://www.digitalocean.com/community/tutorials/how-to-install-elasticsearch-logstash-and-kibana-elastic-stack-on-ubuntu-18-04\n Once done make sure your elastic, logstash, and kibana process are able to communicate with each other\n  Get the logstash configuration from the following git hub repository\n  This git hub repo contains the logstash filtering for Cloudstack mangement server\nhttps://github.com/kiranchavala/logstash-cloudstack\nExample  Make sure your the logstash.conf under /etc/logstash\nThe grok pattern folder is under /etc/logstash/pattern\nRun the logstash binary\n/usr/share/logstash/bin/logstash -f /etc/logstash/cloudstack.conf\nThe outputs the logs into the elastic search index and created various feilds\nSample KQL query  To identify the total number of jobs of deployVirtualMachine\napi_command.keyword : deployVirtualMachine and api_command_status : START\nlog_message : \u0026ldquo;submit async job-514\u0026rdquo; or log_message : \u0026ldquo;Complete async job-514\u0026rdquo;\n ",
    "ref": "/blog/logstash-cloudstack/"
  },{
    "title": "Terraformcloudstack",
    "date": "",
    "description": "",
    "body": "Terraform is a tool to deploy resources on cloud\nIt is an infrastructure as code tool\nGenerally the plugins are available at\nhttps://registry.terraform.io/\nTo use the plugins which are archived and not available in the terraform registry\nFollow the steps a small tweak is necessary\n Currently the cloudstack plugin is archived  https://github.com/hashicorp/terraform-provider-cloudstack\nhttps://github.com/hashicorp/terraform-provider-cloudstack/blob/stable-website/website/docs/index.html.markdown\nDownload the terrform provider for cloudstack based on the os you are running  https://releases.hashicorp.com/terraform-provider-cloudstack/0.3.0/\nOn linux and mac  Move it\n.terraform.d/plugins/localdomain/provider/cloudstack/0.3.0/linux_amd64\nor\n.terraform.d/plugins/localdomain/provider/cloudstack/0.3.0/darwin_amd64\nsample gist  https://gist.github.com/kiranchavala/ce250d57b49ab1e8112ee0abdc64ff1c\n  terraform init\n  terraform apply\n  useful links\nhttps://www.youtube.com/watch?v=0O5yqQqiQRQ\u0026amp;t=746s\n  https://www.terraform.io/docs/cli/config/config-file.html\nhttps://stackoverflow.com/questions/63365156/how-to-use-the-ibm-cloud-provider-plug-in-for-terraform-with-terraform-0-13\nhttps://www.ibm.com/cloud/blog/setting-terraform-ibm-cloud-provider-windows\nhttps://stackoverflow.com/questions/63531360/terraform-manually-installed-plugin-fails\n",
    "ref": "/blog/terraform-cloudstack/"
  },{
    "title": "Raspberry pi",
    "date": "",
    "description": "",
    "body": "After hearing frequent mentions of Raspberry pi use cases, I had decided to buy Raspberry pi 4 model.\nThe site https://www.thingbits.in was giving best discounts on pi and it\u0026rsquo;s accessories.\n The best use case of pi was the implementation of PI-HOLE which blocks all the ads on websites.\nHere are links i used for the complete installation of pi and implementation of PI-HOLE\nhttps://docs.pi-hole.net/\nhttps://medium.com/swlh/how-to-set-up-pi-hole-2293246dc8ed\nhttps://filterlists.com/lists/pl-host-file\n",
    "ref": "/blog/raspberrypi/"
  },{
    "title": "Downloading songs from Spotify",
    "date": "",
    "description": "",
    "body": "To download the songs from spotify\nhttps://gist.github.com/kiranchavala/36afff2694c620421e26dd8c85cd74a4\n References\nhttps://github.com/SathyaBhat/spotify-dl\nhttps://sathyasays.com/2015/12/29/spotify-dl-download-your-spotify-my-music-songs-as-mp3/\nhttps://medium.com/@sachithmuhandiram/youtube-dl-cheatsheet-bcc0782e7124\n",
    "ref": "/blog/downloading-songs-from-spotify/"
  },{
    "title": "K9scli",
    "date": "",
    "description": "",
    "body": "k9s is an excellent cli tool to interact with the kubernetes clusters\nbrew install derailed/k9s/k9s\nRef: https://k9scli.io/topics/install/ https://k9scli.io/\n",
    "ref": "/blog/k9scli/"
  },{
    "title": "Installing k3s",
    "date": "",
    "description": "",
    "body": "K3s is light weight kubernetes distribution from Rancher\nhttps://gist.github.com/kiranchavala/71835ec52a2c5020a5e439345b57d744\n Ref: https://k3s.io/ https://github.com/alexellis/k3sup\n",
    "ref": "/blog/installing-k3s/"
  },{
    "title": "Mergingkubeconfig",
    "date": "",
    "description": "",
    "body": "Merging kubeconfig files\nWhen you have multiple kubernetes clusters, manually entering to the kubectl config is time consuming and error prone\nAdd the two config files to the env var export KUBECONFIG=~/.kube/config:~/Desktop/configFile2.yaml\nReview that you have two configurations in one view\nkubectl config view\nView the raw config and output to a new file\nkubectl config view \u0026ndash;raw \u0026gt; test.yaml\ncp test.yaml .kube/config\nenv\nyou can unset the KUBECONFIG later on\nunset KUBECONFIG\n",
    "ref": "/blog/merging-kube-config-files/"
  },{
    "title": "Enabling zsh history",
    "date": "",
    "description": "",
    "body": "Add alias in your .zshrc file\nalias history=\u0026ldquo;history 0\u0026rdquo;\nsource ~/.zshrc\n",
    "ref": "/blog/enabling-zsh-history/"
  },{
    "title": "Using Hugo",
    "date": "",
    "description": "",
    "body": "Hugo Requires Go\nbrew install hugo\ncreate a folder for your website files\nhugo server up #It will generate a site locally on port 1313\nInstall a theme and copy exampleSite/config.toml to the root folder\nmkdir themes // Creates a \u0026ldquo;themes\u0026rdquo; Folder cd themes // Points to the \u0026ldquo;themes\u0026rdquo; Folder git submodule add https://github.com/pacollins/hugo-future-imperfect-slim.git\nYoutube references\nMike Dane\u0026rsquo;s Playlist\n  Ref\nInstallation\nhttps://gohugo.io/getting-started/installing/\nTheme https://github.com/pacollins/hugo-future-imperfect-slim#examplesite\n",
    "ref": "/blog/using-hugo/"
  },{
    "title": "Installing Rancher",
    "date": "",
    "description": "",
    "body": "Rancher is a tool to manage your kubernetes cluster\nThe installation steps are here\nhttps://gist.github.com/kiranchavala/893ec350dd55f9fb4747b602208bb4fc\n ",
    "ref": "/blog/installing-rancher/"
  },{
    "title": "Installing kubernetes via kubeadm",
    "date": "",
    "description": "",
    "body": "The steps are here\nhttps://gist.github.com/kiranchavala/7e4cda9bff5e141bd7601c870191e051\n ",
    "ref": "/blog/installing-kubernetes-via-kubeadm/"
  },{
    "title": "Using Jekyll",
    "date": "",
    "description": "",
    "body": "Jekyll is popular static site generator\nThe steps are here\nhttps://gist.github.com/kiranchavala/152291d148c3694b37d691ca1df1fe8d\n Youtube references\nMike Dane\u0026rsquo;s Playlist\n  Bill Raymond\n  ",
    "ref": "/blog/using-jekyll/"
  },{
    "title": "Using tmux",
    "date": "",
    "description": "",
    "body": "If you want to execute the same command across different server\nhttps://github.com/tmux/tmux/wiki\n ",
    "ref": "/blog/using-tmux/"
  },{
    "title": "Disable ipv6 in centos 7",
    "date": "",
    "description": "",
    "body": "  To verify if IPv6 is enabled or not, execute\nifconfig -a | grep inet6\ninet6 fe80::211:aff:fe6a:9de4 prefixlen 64 scopeid 0x20\ninet6 ::1 prefixlen 128 scopeid 0x10[host]\n  Disable Ipv6 in kernel module (requires reboot)\n  Edit /etc/default/grub\nadd ipv6.disable=1 in line GRUB_CMDLINE_LINUX, e.g\ncat /etc/default/grub GRUB_TIMEOUT=5 GRUB_DEFAULT=saved GRUB_DISABLE_SUBMENU=true GRUB_TERMINAL_OUTPUT=\u0026quot;console\u0026quot; GRUB_CMDLINE_LINUX=\u0026quot;ipv6.disable=1 crashkernel=auto rhgb quiet\u0026quot; GRUB_DISABLE_RECOVERY=\u0026quot;true\u0026quot;   Regenerate a GRUB configuration file and overwrite existing one\ngrub2-mkconfig -o /boot/grub2/grub.cfg\n  Restart system and verify no line “inet6” in “ip addr show” command output\nshutdown -r now\n  ",
    "ref": "/blog/disable-ipv6-in-centos-7/"
  },{
    "title": "",
    "date": "",
    "description": "",
    "body": "I am a Software Engineer at Persistent Systems, working on Cloud Stack Orchestration and various tech related to Cloud Infra, container technology like Docker, Kubernetes\n",
    "ref": "/about/"
  },{
    "title": "",
    "date": "",
    "description": "",
    "body": "You can reach me\nEmail kiranchavala@gmail.com\nTwitter @kiranchavala\n",
    "ref": "/contact/"
  }]
